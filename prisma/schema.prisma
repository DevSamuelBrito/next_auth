// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String               @id @default(cuid())
  name                   String
  username               String               @unique
  email                  String               @unique
  password               String
  createAt               DateTime             @default(now())
  updateAt               DateTime             @updatedAt
  profilePicture         String?
  profilePicturePublicId String?
  images                 UserImage[]
  passwordResetToken     PasswordResetToken[]
  FavoriteImage          FavoriteImage[]
}

model UserImage {
  id            String          @id @default(cuid())
  secureUrl     String
  publicId      String
  userId        String
  user          User            @relation(fields: [userId], references: [id])
  name          String
  description   String
  tags          UserImageTags[]
  createAt      DateTime        @default(now())
  isPrivate     Boolean         @default(false)
  FavoriteImage FavoriteImage[]
}

model Tag {
  id     String          @id @default(cuid())
  name   String          @unique
  images UserImageTags[]
}

model UserImageTags {
  imageId String
  tagId   String

  image UserImage @relation(fields: [imageId], references: [id])
  tag   Tag       @relation(fields: [tagId], references: [id])

  @@id([imageId, tagId]) // Chave composta para n√£o repetir a mesma tag na mesma imagem
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model FavoriteImage {
  id        String    @id @default(cuid())
  userEmail    String
  imageId   String
  user      User      @relation(fields: [userEmail], references: [email])
  image     UserImage @relation(fields: [imageId], references: [id])
  createdAt DateTime  @default(now())

  @@unique([userEmail, imageId])
}
